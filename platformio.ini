; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .
data_dir = data
; build_dir = ${sysenv.TEMP}/pio-build/$PROJECT_HASH
default_envs = TTGO_TDISPLAY, TTGO_TDISPLAY_SANDWICH, esp32dev_OLED

[common_env_data]
framework = arduino
upload_speed = 921600
monitor_speed = 115200
monitor_port = COM13
upload_port = COM13
monitor_filters = time
board_build.partitions = CO2_Gadget_Partitions.csv ; Others at Windows at C:\Users\%USER%\AppData\Local\Arduino15\packages\esp32\hardware\esp32\1.0.5\tools\partitions
; board_build.partitions = min_spiffs.csv
lib_ldf_mode = chain+
lib_deps = 
    me-no-dev/ESP Async WebServer @ ^1.2.3
    ayushsharma82/AsyncElegantOTA @ ^2.2.6
    knolleary/PubSubClient @ ^2.8
    neu-rah/ArduinoMenu library @ ^4.21.4
    lennarthennigs/Button2 @ ^1.6.5
    hpsaturn/CanAirIO Air Quality Sensors Library @ ^0.4.2
    git+https://github.com/melkati/arduino-ble-gadget.git#setSampleIntervalMs ; sensirion/Sensirion Gadget BLE Arduino Lib@^0.10.0
    ; neu-rah/streamFlow @ 0.0.0-alpha+sha.bf16ce8926 ; Needed for -DMENU_DEBUG
    rlogiacco/Battery Sense @ ^1.1.2
build_flags = 
    ; If you want you can keep sensitive data in a file, you can define it in environment variables so you don't need a credentials.h file with your secrets
    ;
    ; Unix
    ; export WIFI_SSID='\"my\ ssid\ name\"'
    ; export WIFI_PASS='\"my\ password\"'
    ; Windows
    ; set WIFI_SSID="my ssid name"
    ; set WIFI_PASS="my password"
    ;
    ; To use these environment variables uncomment next two lines (delete front semicolon)
    '-DWIFI_SSID_CREDENTIALS="${sysenv.WIFI_SSID}"'
    '-DWIFI_PW_CREDENTIALS="${sysenv.WIFI_PASS}"'

    -D MQTT_BROKER_SERVER="\"192.168.1.145"\"
    -D CO2_GADGET_VERSION="\"0.5."\"
    -D CO2_GADGET_REV="\"031"\"
    -D CORE_DEBUG_LEVEL=0
	
    -DBTN_UP=35				; Pinnumber for button for up/previous and select / enter actions
    -DBTN_DWN=34			; Pinnumber for button for down/next and back / exit actions
    -DENABLE_PIN=27        ; Reserved for the future to enable the sensor
    -D ENABLE_PIN_HIGH=1    ; Should be ENABLE_PIN high or low to enable the sensor?
    -D ORANGE_PIN=32        ; GPIO to go HIGH on orange color range
    -D ORANGE_PIN_LOW=0
    -D ORANGE_PIN_HIGH=1    ; Should the ORANGE_PIN_HIGH go high or low at threshold
    -D RED_PIN=33           ; GPIO to go HIGH on red color range
    -D RED_PIN_LOW=0
    -D RED_PIN_HIGH=1    	; Should the RED_PIN_HIGH go high or low at threshold
    -D GREEN_PIN=25         ; GPIO to go HIGH bellow range (goes LOW at orange range)
    -D GREEN_PIN_LOW=0
    -D GREEN_PIN_HIGH=1    	; Should the GREEN_PIN_HIGH go high or low bellow orange threshold
    -D PIN_HYSTERESIS=100 ; Hysteresis PPM to avoid pins going ON and OFF continuously. TODO : Minimum time to switch
    -D WIFI_PRIVACY         ; Uncomment to hide WiFi password in the menu
    -D SUPPORT_BLE			; Comment to dissable Bluetooth (makes more memory available)
    ; -D SUPPORT_OTA        ; Needs SUPPORT_WIFI
    ; -D SUPPORT_MDNS		; Needs SUPPORT_WIFI
    -D SUPPORT_MQTT         ; Needs SUPPORT_WIFI
    ; -D DEBUG_ARDUINOMENU
    ; -D MENU_DEBUG         	; Needs streamFlow library
    -Os						; Optimize compilation for use memory
    -w						; Supress compilation warnings

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = ${common_env_data.framework}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
upload_port = ${common_env_data.upload_port}
monitor_port = ${common_env_data.monitor_port}
monitor_filters = ${common_env_data.monitor_filters}
board_build.partitions = ${common_env_data.board_build.partitions}
lib_deps = 
	${common_env_data.lib_deps}
build_flags =
    ${common_env_data.build_flags}
    -DUNITHOSTNAME="\"CO2-Gadget"\"
	-DFLAVOUR="\"ESP32 BASIC"\"

[env:esp32dev-sandwich]
platform = espressif32
board = esp32dev
framework = ${common_env_data.framework}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
upload_port = ${common_env_data.upload_port}
monitor_port = ${common_env_data.monitor_port}
monitor_filters = ${common_env_data.monitor_filters}
board_build.partitions = ${common_env_data.board_build.partitions}
lib_deps = 
	${common_env_data.lib_deps}
build_flags = 
    ${common_env_data.build_flags}
    -DUNITHOSTNAME="\"CO2-Gadget-S"\"
	-DALTERNATIVE_I2C_PINS
	-DFLAVOUR="\"ESP32 SANDWICH"\"

[env:TTGO_TDISPLAY]
platform = espressif32
board = esp32dev
framework = ${common_env_data.framework}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
upload_port = ${common_env_data.upload_port}
monitor_port = ${common_env_data.monitor_port}
monitor_filters = ${common_env_data.monitor_filters}
board_build.partitions = ${common_env_data.board_build.partitions}
lib_deps = 
    bodmer/TFT_eSPI @ ^2.4.0 ; https://github.com/melkati/TFT_eSPI.git
	${common_env_data.lib_deps}
build_flags = 
    ${common_env_data.build_flags}
    -DBTN_DWN=0			; Redefine pinnumber for button for down/next and back / exit actions
    -DSUPPORT_TFT
    -DTTGO_TDISPLAY=1	
    -DBACKLIGHT_PIN=4      ; Pin used for backlight 
	-DUSER_SETUP_LOADED=1
	-DST7789_DRIVER=1
	-DENABLE_TFT=1
	-DTFT_WIDTH=135
	-DTFT_HEIGHT=240
	-DCGRAM_OFFSET=1
	-DTFT_MOSI=19
	-DTFT_SCLK=18
	-DTFT_CS=5
	-DTFT_DC=16
	-DTFT_RST=23
	-DTFT_BL=4
	-DTFT_BACKLIGHT_ON=1
	-DLOAD_GLCD=1
	-DLOAD_FONT2=1
	-DLOAD_FONT4=1
	-DLOAD_FONT6=1
	-DLOAD_FONT7=1
	-DLOAD_FONT8=1
	-DLOAD_GFXFF=1
	-DSMOOTH_FONT=1
	-DSPI_FREQUENCY=40000000
	-DSPI_READ_FREQUENCY=6000000
    -DUNITHOSTNAME="\"CO2-Gadget"\"
	-DFLAVOUR="\"TTGO T-Display"\"

[env:TTGO_TDISPLAY_SANDWICH]
platform = espressif32
board = esp32dev
framework = ${common_env_data.framework}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
upload_port = ${common_env_data.upload_port}
monitor_port = ${common_env_data.monitor_port}
monitor_filters = ${common_env_data.monitor_filters}
board_build.partitions = ${common_env_data.board_build.partitions}
lib_deps = 
	${common_env_data.lib_deps}
    bodmer/TFT_eSPI @ ^2.4.0 ; https://github.com/melkati/TFT_eSPI.git
build_flags = 
    ${common_env_data.build_flags}
    -DBTN_DWN=0			; Redefine pinnumber for button for down/next and back / exit actions
    -DSUPPORT_TFT
    -DTTGO_TDISPLAY=1	
    -DBACKLIGHT_PIN=4      ; Pin used for backlight 
	-DUSER_SETUP_LOADED=1
	-DST7789_DRIVER=1
	-DENABLE_TFT=1
	-DTFT_WIDTH=135
	-DTFT_HEIGHT=240
	-DCGRAM_OFFSET=1
	-DTFT_MOSI=19
	-DTFT_SCLK=18
	-DTFT_CS=5
	-DTFT_DC=16
	-DTFT_RST=23
	-DTFT_BL=4
	-DTFT_BACKLIGHT_ON=1
	-DLOAD_GLCD=1
	-DLOAD_FONT2=1
	-DLOAD_FONT4=1
	-DLOAD_FONT6=1
	-DLOAD_FONT7=1
	-DLOAD_FONT8=1
	-DLOAD_GFXFF=1
	-DSMOOTH_FONT=1
	-DSPI_FREQUENCY=40000000
	-DSPI_READ_FREQUENCY=6000000
    -DUNITHOSTNAME="\"CO2-Gadget-S"\"
	-DALTERNATIVE_I2C_PINS
	-DFLAVOUR="\"TTGO T-Display Sandwich"\"

[env:esp32dev_OLED]
platform = espressif32
board = esp32dev
framework = ${common_env_data.framework}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
upload_port = ${common_env_data.upload_port}
monitor_port = ${common_env_data.monitor_port}
monitor_filters = ${common_env_data.monitor_filters}
board_build.partitions = ${common_env_data.board_build.partitions}
lib_deps = 
	${common_env_data.lib_deps}
	olikraus/U8g2@^2.32.6
build_flags =
    ${common_env_data.build_flags}
    -DSUPPORT_OLED
    -DUNITHOSTNAME="\"CO2-Gadget-OLED"\"
	-DFLAVOUR="\"ESP32 OLED"\"

[env:esp32dev_OLED_OTA]
platform = espressif32
board = esp32dev
framework = ${common_env_data.framework}
; upload_speed = ${common_env_data.upload_speed}
; monitor_speed = ${common_env_data.monitor_speed}
; upload_port = ${common_env_data.upload_port}
; monitor_port = ${common_env_data.monitor_port}
; monitor_filters = ${common_env_data.monitor_filters}
; upload_speed = 921600
; monitor_speed = 115200
; monitor_port = COM6
; upload_port = COM6
monitor_filters = ${common_env_data.monitor_filters}
board_build.partitions = ${common_env_data.board_build.partitions}
lib_deps = 
	${common_env_data.lib_deps}
	olikraus/U8g2@^2.32.6
build_flags =
    ${common_env_data.build_flags}
    -DSUPPORT_OLED
    -DUNITHOSTNAME="\"CO2-Gadget-OLED-OTA"\"
	-DFLAVOUR="\"ESP32 OLED OTA"\"
 	-USUPPORT_BLE
 	-DSUPPORT_OTA
 	-DSUPPORT_MDNS